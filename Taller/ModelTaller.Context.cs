//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Taller
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TallerEntities : DbContext
    {
        public TallerEntities()
            : base("name=TallerEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CarrosClientes> CarrosClientes { get; set; }
        public virtual DbSet<Citas> Citas { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
    
        public virtual int SetUsuario(Nullable<int> idUsuario, string nombre, string apellidoPaterno, string apellidoMaterno, Nullable<long> telefono, string correo, string clave, Nullable<int> esAdmin, ObjectParameter mensaje, ObjectParameter exitoso)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var telefonoParameter = telefono.HasValue ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(long));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            var esAdminParameter = esAdmin.HasValue ?
                new ObjectParameter("EsAdmin", esAdmin) :
                new ObjectParameter("EsAdmin", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetUsuario", idUsuarioParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, telefonoParameter, correoParameter, claveParameter, esAdminParameter, mensaje, exitoso);
        }
    
        public virtual int ValidarUsuario(string correo, string clave, ObjectParameter mensaje, ObjectParameter exitoso, ObjectParameter idUsuario, ObjectParameter esAdmin)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ValidarUsuario", correoParameter, claveParameter, mensaje, exitoso, idUsuario, esAdmin);
        }
    
        public virtual int SetCarroCliente(Nullable<int> idCarroCliente, Nullable<int> idCliente, string modelo, string marca, Nullable<int> anio, string placas, ObjectParameter mensaje, ObjectParameter exitoso)
        {
            var idCarroClienteParameter = idCarroCliente.HasValue ?
                new ObjectParameter("IdCarroCliente", idCarroCliente) :
                new ObjectParameter("IdCarroCliente", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("Marca", marca) :
                new ObjectParameter("Marca", typeof(string));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(int));
    
            var placasParameter = placas != null ?
                new ObjectParameter("Placas", placas) :
                new ObjectParameter("Placas", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetCarroCliente", idCarroClienteParameter, idClienteParameter, modeloParameter, marcaParameter, anioParameter, placasParameter, mensaje, exitoso);
        }
    
        public virtual ObjectResult<CarrosClientes> GetCarrosClientes(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CarrosClientes>("GetCarrosClientes", idUsuarioParameter);
        }
    
        public virtual ObjectResult<CarrosClientes> GetCarrosClientes(Nullable<int> idUsuario, MergeOption mergeOption)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CarrosClientes>("GetCarrosClientes", mergeOption, idUsuarioParameter);
        }
    
        public virtual int DeleteCarroCliente(Nullable<int> idCarroCliente, ObjectParameter mensaje, ObjectParameter exitoso)
        {
            var idCarroClienteParameter = idCarroCliente.HasValue ?
                new ObjectParameter("IdCarroCliente", idCarroCliente) :
                new ObjectParameter("IdCarroCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCarroCliente", idCarroClienteParameter, mensaje, exitoso);
        }
    
        public virtual int SetCita(Nullable<int> idCita, Nullable<int> idCarroCliente, Nullable<int> aprobada, string comentarios, Nullable<System.DateTime> fechaInicio, ObjectParameter mensaje, ObjectParameter exitoso)
        {
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("IdCita", idCita) :
                new ObjectParameter("IdCita", typeof(int));
    
            var idCarroClienteParameter = idCarroCliente.HasValue ?
                new ObjectParameter("IdCarroCliente", idCarroCliente) :
                new ObjectParameter("IdCarroCliente", typeof(int));
    
            var aprobadaParameter = aprobada.HasValue ?
                new ObjectParameter("Aprobada", aprobada) :
                new ObjectParameter("Aprobada", typeof(int));
    
            var comentariosParameter = comentarios != null ?
                new ObjectParameter("Comentarios", comentarios) :
                new ObjectParameter("Comentarios", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetCita", idCitaParameter, idCarroClienteParameter, aprobadaParameter, comentariosParameter, fechaInicioParameter, mensaje, exitoso);
        }
    
        public virtual ObjectResult<GetCitas_Result> GetCitas(Nullable<int> idCita, Nullable<int> aprobada, Nullable<int> idCliente)
        {
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("IdCita", idCita) :
                new ObjectParameter("IdCita", typeof(int));
    
            var aprobadaParameter = aprobada.HasValue ?
                new ObjectParameter("Aprobada", aprobada) :
                new ObjectParameter("Aprobada", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCitas_Result>("GetCitas", idCitaParameter, aprobadaParameter, idClienteParameter);
        }
    
        public virtual int DeleteCita(Nullable<int> idCita, ObjectParameter mensaje, ObjectParameter exitoso)
        {
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("IdCita", idCita) :
                new ObjectParameter("IdCita", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCita", idCitaParameter, mensaje, exitoso);
        }
    }
}
